define(
    [
        'polygonjs/Engine', 
        'polygonjs/Entity',
        'polygonjs/Fn',
        'polygonjs/Material',
        'polygonjs/Mesh',
        'polygonjs/Profiler',
        'polygonjs/Renderer',
        'polygonjs/Scene',
        'polygonjs/cameras/Camera',
        'polygonjs/cameras/OrthographicCamera',
        'polygonjs/cameras/PerspectiveCamera',
        'polygonjs/entities/Model',
        'polygonjs/entities/Polygon',
        'polygonjs/lights/Light',
        'polygonjs/math/Color',
        'polygonjs/math/Matrix3',
        'polygonjs/math/Matrix4',
        'polygonjs/math/PMath',
        'polygonjs/math/Vector2',
        'polygonjs/math/Vector3',
        'polygonjs/meshes/Cube',
        'polygonjs/meshes/Icosahedron',
        'polygonjs/meshes/Sphere',
        'polygonjs/surfaces/CanvasSurface',
        'polygonjs/surfaces/SvgSurface',
        'polygonjs/surfaces/WebGLSurface'
    ],
    function (
        Engine,
        Entity,
        Fn,
        Material,
        Mesh,
        Profiler,
        Renderer,
        Scene,
        Camera,
        OrthographicCamera,
        PerspectiveCamera,
        Model,
        Polygon,
        Light,
        Color,
        Matrix3,
        Matrix4,
        PMath,
        Vector2,
        Vector3,
        Cube,
        Icosahedron,
        Sphere,
        CanvasSurface,
        SvgSurface,
        WebGLSurface) {

        var global = {
            Engine: Engine,
            Entity: Entity,
            Fn: Fn,
            Material: Material,
            Mesh: Mesh,
            Profiler: Profiler,
            Renderer: Renderer,
            Scene: Scene,
            Camera: Camera,
            OrthographicCamera: OrthographicCamera,
            PerspectiveCamera: PerspectiveCamera,
            Model: Model,
            Polygon: Polygon,
            Light: Light,
            Color: Color,
            Matrix3: Matrix3,
            Matrix4: Matrix4,
            PMath: PMath,
            Vector2: Vector2,
            Vector3: Vector3,
            Cube: Cube,
            Icosahedron: Icosahedron,
            Sphere: Sphere,
            CanvasSurface: CanvasSurface,
            SvgSurface: SvgSurface,
            WebGLSurface: WebGLSurface
        };

        window.PolygonJS = global;
        return global;
    }
);